<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jJgZFwgAAAAASUVORK5CYII=
</value>
  </data>
</root>